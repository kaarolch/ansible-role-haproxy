---
# defaults file for ansible-role-haproxy

# sysctl

# haproxy installation parameters
haproxy_rpm: http://cbs.centos.org/kojifiles/packages/haproxy/1.8.1/4.el7/x86_64/haproxy18-1.8.1-4.el7.x86_64.rpm
haproxy_user: haproxy
haproxy_group: haproxy

# haproxy main config option
haproxy_chroot_enabled: False
haproxy_chroot_dir: /var/lib/haproxy
haproxy_max_conn: 30000
haproxy_nbproc_enabled: True
haproxy_nbproc: 4
haproxy_forwardfor: False
haproxy_redispatch: True
haproxy_retry: 3
haproxy_stats_lport: 1999

haproxy_ssl_enabled: False

haproxy_accesslog_json: True
haproxy_timeouts:
  - { type: "http-request", value: "10s"  }
  - { type: "queue", value: "30s" }
  - { type: "connect", value: "10s" }
  - { type: "client", value: "30s" }
  - { type: "server", value: "1m" }
  - { type: "http-keep-alive", value: "10s"  }
  - { type: "check", value: "5s" }

# Stats settings
haproxy_stats_enabled: True
haproxy_stats_max_conn: 10
haproxy_stats_uri: /lb_stats
haproxy_stats_port: 2000
haproxy_stats_user: admin
haproxy_stats_pass: PleaseChangeIt123

# Services config
haproxy_services: []
# haproxy_services:
#   - name: "k8s"
#     type: frontend
#     binds:
#       - { host: "*", port: "80" }
#     mode: http
#     acls:
#       - { name: "forward_k8s", rule: "hdr_end(host) -i k8s.example.com" }
#     conditions:
#       - { state: "use_backend k8s_backend", rule: "forward_k8s" }
#     default_backend: company_site
#   - name: "company_site"
#     type: backend
#     balance_type: roundrobin
#     options:
#       - "option forwardfor"
#       - "http-request set-header X-Forwarded-Port %[dst_port]"
#     endpoints:
#       - { name: "backend_1", address: "192.168.0.1:80", options: "check" }
#       - { name: "backend_2", address: "192.168.0.2:80", options: "check" }
#   - name: "k8s_backend"
#     type: backend
#     balance_type: roundrobin
#     options:
#       - "option forwardfor"
#       - "http-request set-header X-Forwarded-Port %[dst_port]"
#     endpoints:
#       - { name: "backend_1", address: "192.168.0.3:8080", options: "check" }
#       - { name: "backend_2", address: "192.168.0.4:8080", options: "check" }

# haproxy_services:
#   - name: "exmaple_service"
#     type: frontend
#     binds:
#       - { host: "*", port: "80" }
#       - { host: "127.0.0.1", port: "443", priv_key: "test.pem" }
#     mode: http
#     acls:
#       - { name: "test", rule: "hdr_end(host) -i example.com" }
#     conditions:
#       - { state: "use_backend examplebackend", rule: "test" }
#       - { state: "redirect scheme https", rule: "!{ ssl_fc }" }
#     default_backend: examplebackend
#   - name: "examplebackend"
#     type: backend
#     balance_type: roundrobin
#     options:
#       - "option forwardfor"
#       - "http-request set-header X-Forwarded-Port %[dst_port]"
#       - "http-request add-header X-Forwarded-Proto https if { ssl_fc }"
#     endpoints:
#       - { name: "backend_1", address: "192.168.0.1:80", options: "check" }
#       - { name: "backend_2", address: "192.168.0.2:80", options: "check" }
